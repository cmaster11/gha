name: Build the actions

on:
  # Call the workflow from a pull_request event
  workflow_call:

concurrency:
  group: "${{ (github.event.action == 'closed' && github.event.pull_request.merged) && 'release' || format('pr-{0}', github.event.pull_request.number) }}"
  # Only cancel existing builds if we're in dev mode
  cancel-in-progress: ${{ github.event.action != 'closed' }}

jobs:
  get-release-label:
    name: Get release label
    if: >
      github.event.action != 'closed' ||
      (github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-latest
    outputs:
      release-label: ${{ steps.get-release-label.outputs.release-label }}
      continue-release: ${{ steps.get-release-label.outputs.continue-release }}
    permissions:
      pull-requests: read
      contents: read
    steps:
      - name: Get release label
        id: get-release-label
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: get-release-label
          token: ${{ secrets.GITHUB_TOKEN }}

  get-changed-actions:
    name: Get changes
    if: >
      github.event.action != 'closed' ||
      (github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-changed-actions.outputs.matrix }}
      matrix-empty: ${{ steps.get-changed-actions.outputs.matrix-empty }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changes
        id: get-changed-actions
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: get-changed-actions
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build (${{ matrix.directory }})
    needs:
      - get-changed-actions
      - get-release-label
    runs-on: ubuntu-latest
    if: needs.get-release-label.outputs.continue-release == 'true' && needs.get-changed-actions.outputs.matrix-empty != 'true'
    permissions:
      pull-requests: read
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-changed-actions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cmaster11/gha@action-git-init-userinfo/v0
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - shell: bash
        run: npm ci

      - name: Build
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: build
          token: ${{ secrets.GITHUB_TOKEN }}

          release-label: ${{ needs.get-release-label.outputs.release-label }}
          action-name: ${{ matrix.directory }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}

      - uses: cloudposse/github-action-matrix-outputs-write@v1
        with:
          matrix-step-name: build
          matrix-key: ${{ matrix.directory }}
          outputs: |-
            version-branch: ${{ steps.build.outputs.version-branch }}

  # Trigger any test workflows after everything has been built
  post-build-test:
    name: Post-build (${{ matrix.directory }})
    needs:
      - get-changed-actions
      - build
      - get-release-label
    runs-on: ubuntu-latest
    if: needs.get-release-label.outputs.continue-release == 'true' && needs.get-changed-actions.outputs.matrix-empty != 'true'
    permissions:
      pull-requests: read
      contents: write
      actions: write
      statuses: write
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-actions.outputs.matrix) }}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read-build-output
        with:
          matrix-step-name: build
      - run: echo "$JSON" | jq
        env:
          JSON: ${{ steps.read-build-output.outputs.result }}

      - name: Post build test
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: post-build-test
          token: ${{ secrets.GITHUB_TOKEN }}

          action-name: ${{ matrix.directory }}
          version-branch: ${{ fromJson(steps.read-build-output.outputs.result).version-branch[matrix.directory] }}
          head-ref: ${{ github.head_ref }}
          head-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    permissions:
      pull-requests: read
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Cleanup
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: cleanup
          token: ${{ secrets.GITHUB_TOKEN }}
