name: Build Github Actions and reusable workflows
on:
  workflow_call:
    inputs:
      skip-test:
        description: |
          If true, do not run the test job. Useful when you require custom testing jobs to run before whole actions/workflow build pipeline.
        type: boolean
        default: false
      lint-command:
        description: The command used to run lint tests.
        required: false
        default: npm run lint
        type: string
      test-command:
        description: The command used to run tests.
        required: false
        default: npm run test
        type: string
      changes-paths-js:
        description: |
          A list of globs used to check whether we need to rebuild all the actions containing JS code.
          The supported features are:
          * Wildcards (`**`, `*.js`) * Negation (`'!a/*.js'`, `'*!(b).js'`) * extglobs (`+(x|y)`, `!(a|b)`) * POSIX character classes (`[[:alpha:][:digit:]]`) * brace expansion (`foo/{1..5}.md`, `bar/{a,b,c}.js`) * regex character classes (`foo-[1-5].js`) * regex logical "or" (`foo/(abc|xyz).js`)
          You can see more examples at: https://github.com/micromatch/micromatch#matching-features
        type: string
        required: false
        default: |
          package.json
          package-lock.json
          lib/**
          jest.config.mjs
          tsconfig.json
      skip-gen-test-catch-all-workflow:
        description: |
          If true, skip the `gen-test-catch-all-workflow` job. This can be useful for example when you don't want to expose a token with `workflows` permission to dependabot and  other collaborators.
        type: boolean
        default: ${{ github.actor == 'dependabot[bot]' }}
    secrets:
      token-push-workflows:
        description: |
          A PAT that allows the build workflow to commit and push generated workflows. This token needs to have the `contents: write` and `workflows: write` permissions and needs to belong either to a user or to a GitHub app.
        required: false
concurrency:
  group: ${{ (github.event.action == 'closed' && github.event.pull_request.merged) && 'release' || format('pr-{0}', github.event.pull_request.number) }}
  cancel-in-progress: ${{ github.event.action != 'closed' }}
jobs:
  gen-test-catch-all-workflow:
    name: Generate test workflows
    if: github.event.action != 'closed' && inputs.skip-gen-test-catch-all-workflow != true
    runs-on: ubuntu-latest
    outputs:
      had-changes: ${{ steps.gen-test-catch-all-workflow.outputs.had-changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.token-push-workflows }}
      - uses: cmaster11/gha@action-git-init-userinfo/v0
      - name: Generate test workflows
        id: gen-test-catch-all-workflow
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: gen-test-catch-all-workflow
          token: ${{ secrets.GITHUB_TOKEN }}
          remapped: true
          head-ref: ${{ github.head_ref }}
  get-release-label:
    name: Get release label
    if: |
      github.event.action != 'closed' || (github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-latest
    outputs:
      release-label: ${{ steps.get-release-label.outputs.release-label }}
      continue-release: ${{ steps.get-release-label.outputs.continue-release }}
    permissions:
      pull-requests: read
      contents: read
    steps:
      - name: Get release label
        id: get-release-label
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: get-release-label
          token: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Test (JS)
    if: |
      inputs.skip-test != true && (
        github.event.action != 'closed' ||
        (github.event.action == 'closed' && github.event.pull_request.merged)
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check workflow files
        run: |
          TMP="$(mktemp -d)"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) latest "$TMP"
          echo "$TMP" >> "$GITHUB_PATH"
        shell: bash
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - shell: bash
        run: npm ci
      - shell: bash
        run: $LINT_COMMAND
        env:
          TEST_COMMAND: ${{ inputs.lint-command }}
      - shell: bash
        run: $TEST_COMMAND
        env:
          TEST_COMMAND: ${{ inputs.test-command }}
  get-changed-elements:
    name: Get changes
    if: |
      github.event.action != 'closed' || (github.event.action == 'closed' && github.event.pull_request.merged)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      matrix-actions: ${{ steps.get-changed-elements.outputs.matrix-actions }}
      matrix-actions-empty: ${{ steps.get-changed-elements.outputs.matrix-actions-empty }}
      matrix-workflows: ${{ steps.get-changed-elements.outputs.matrix-workflows }}
      matrix-workflows-empty: ${{ steps.get-changed-elements.outputs.matrix-workflows-empty }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changes
        id: get-changed-elements
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: get-changed-elements
          token: ${{ secrets.GITHUB_TOKEN }}
          changes-paths-js: ${{ inputs.changes-paths-js }}
  build-actions:
    name: Build action (${{ matrix.directory }})
    needs:
      - gen-test-catch-all-workflow
      - test
      - get-changed-elements
      - get-release-label
    runs-on: ubuntu-latest
    if: |
      !failure() && !cancelled() && (
        needs.gen-test-catch-all-workflow.result == 'skipped' ||
        needs.gen-test-catch-all-workflow.outputs.had-changes != 'true'
      ) && (
        needs.get-release-label.outputs.continue-release == 'true' && 
        needs.get-changed-elements.outputs.matrix-actions-empty != 'true'
      )
    permissions:
      pull-requests: read
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-changed-elements.outputs.matrix-actions) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cmaster11/gha@action-git-init-userinfo/v0
      - name: Build
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: build-actions
          token: ${{ secrets.GITHUB_TOKEN }}
          release-label: ${{ needs.get-release-label.outputs.release-label }}
          action-name: ${{ matrix.directory }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}
      - uses: cloudposse/github-action-matrix-outputs-write@v1
        with:
          matrix-step-name: build
          matrix-key: ${{ matrix.directory }}
          outputs: "version-branch: ${{ steps.build.outputs.version-branch }}"
  build-workflows:
    name: Build workflow (${{ matrix.directory }})
    needs:
      - gen-test-catch-all-workflow
      - test
      - get-changed-elements
      - get-release-label
    runs-on: ubuntu-latest
    if: |
      !failure() && !cancelled() && (
        needs.gen-test-catch-all-workflow.result == 'skipped' ||
        needs.gen-test-catch-all-workflow.outputs.had-changes != 'true'
      ) && (
        needs.get-release-label.outputs.continue-release == 'true' && 
        needs.get-changed-elements.outputs.matrix-workflows-empty != 'true'
      )
    permissions:
      pull-requests: read
      contents: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-changed-elements.outputs.matrix-workflows) }}
    steps:
      - uses: actions/checkout@v4
      - uses: cmaster11/gha@action-git-init-userinfo/v0
      - name: Build
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: build-workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          release-label: ${{ needs.get-release-label.outputs.release-label }}
          workflow-name: ${{ matrix.directory }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}
      - uses: cloudposse/github-action-matrix-outputs-write@v1
        with:
          matrix-step-name: build
          matrix-key: ${{ matrix.directory }}
          outputs: "version-branch: ${{ steps.build.outputs.version-branch }}"
  post-build-test-actions:
    name: Post-build test action (${{ matrix.directory }})
    needs:
      - gen-test-catch-all-workflow
      - get-changed-elements
      - build-actions
      - get-release-label
    runs-on: ubuntu-latest
    if: |
      !failure() && !cancelled() && (
        needs.gen-test-catch-all-workflow.result == 'skipped' ||
        needs.gen-test-catch-all-workflow.outputs.had-changes != 'true'
      ) && (
        needs.get-release-label.outputs.continue-release == 'true' && 
        needs.get-changed-elements.outputs.matrix-actions-empty != 'true'
      )
    permissions:
      pull-requests: read
      contents: write
      actions: write
      statuses: write
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-elements.outputs.matrix-actions) }}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read-build-output
        with:
          matrix-step-name: build
      - run: echo "$JSON" | jq
        env:
          JSON: ${{ steps.read-build-output.outputs.result }}
      - name: Post build test actions
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: post-build-test-actions
          token: ${{ secrets.GITHUB_TOKEN }}
          action-name: ${{ matrix.directory }}
          version-branch: ${{ fromJson(steps.read-build-output.outputs.result).version-branch[matrix.directory] }}
          head-ref: ${{ github.head_ref }}
          head-sha: ${{ github.event.pull_request.head.sha }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}
  post-build-test-workflows:
    name: Post-build test workflow (${{ matrix.directory }})
    needs:
      - gen-test-catch-all-workflow
      - get-changed-elements
      - build-workflows
      - get-release-label
    runs-on: ubuntu-latest
    if: |
      !failure() && !cancelled() && (
        needs.gen-test-catch-all-workflow.result == 'skipped' ||
        needs.gen-test-catch-all-workflow.outputs.had-changes != 'true'
      ) && (
        needs.get-release-label.outputs.continue-release == 'true' && 
        needs.get-changed-elements.outputs.matrix-workflows-empty != 'true'
      )
    permissions:
      pull-requests: read
      contents: write
      actions: write
      statuses: write
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-elements.outputs.matrix-workflows) }}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read-build-output
        with:
          matrix-step-name: build
      - run: echo "$JSON" | jq
        env:
          JSON: ${{ steps.read-build-output.outputs.result }}
      - name: Post build test workflows
        id: build
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: post-build-test-workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow-name: ${{ matrix.directory }}
          version-branch: ${{ fromJson(steps.read-build-output.outputs.result).version-branch[matrix.directory] }}
          head-ref: ${{ github.head_ref }}
          head-sha: ${{ github.event.pull_request.head.sha }}
          release: ${{ github.event.action == 'closed' && github.event.pull_request.merged }}
  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    permissions:
      pull-requests: read
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cleanup
        uses: cmaster11/gha@action-ci-build/v0
        with:
          phase: cleanup
          token: ${{ secrets.GITHUB_TOKEN }}
